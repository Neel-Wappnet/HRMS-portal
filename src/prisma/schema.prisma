generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id       Int        @id @default(autoincrement())
  deptName String     @unique
  employee Employee[]
}

model Employee {
  id            Int          @id @default(autoincrement())
  empCode       String       @unique
  name          String
  email         String       @unique
  departmentId  Int?
  role          String
  designation   String
  birthDate     String
  reportingUser String
  profileImage  String
  contactNo     String
  address       String
  department    Department?  @relation(fields: [departmentId], references: [id])
  leave         Leave[]
  leaveMaster   LeaveMaster?
  user          User?
}

model User {
  id         Int       @id @default(autoincrement())
  employeeId Int?      @unique
  email      String    @unique
  password   String
  employee   Employee? @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}

model LeaveMaster {
  id           Int       @id @default(autoincrement())
  employeeId   Int?      @unique
  leaveBalance Int
  employee     Employee? @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}

model Leave {
  id          Int       @id @default(autoincrement())
  employeeId  Int?
  subject     String
  startDate   String
  endDate     String
  leaveReason String
  approved    Boolean @default(false)
  employee    Employee? @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}

model Holiday {
  id         Int      @id @default(autoincrement())
  title      String
  startDate  String
  endDate    String
  isOptional Boolean  @default(false)
  status     String
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  otp       Int
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
